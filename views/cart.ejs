<!DOCTYPE html>
<html lang="en">
<%- include('./partials/navbar') %>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Your Cart | CampusShop</title>
    <link rel="stylesheet" href="styles/cart.css">
</head>
<body>

    
    <main class="cart-page">
        <div class="page-header">
            <h1>Your Cart</h1>
            <p>(<%= cart.reduce((total, item) => total + item.quantity, 0) %>) items in your cart</p>
        </div>
        
        <div class="cart-container">

            <div class="cart-items">
                <% cart.forEach(item => { %>
                    <!-- Cart item 1 -->
                <div class="cart-item">
                    <div class="item-image">
                        <img src="images/backpack.jpg" alt="Campus Backpack">
                    </div>
                    <div class="item-details">
                        <h3><a href='item/<%= item.itemID %>'><%= item.name %></a></h3>
                        <p class="item-variant"></p>
                        <div class="item-price">
                            <span class="current-price">$<%= item.price %></span>
                        </div>
                        <div class="item-actions">
                            <!--div class="quantity-selector">
                                <button class="qty-btn-minus" value="<%= item.itemID %>">-</button>
                               
                                <span><%= item.quantity %></span>
                                <button class="qty-btn-plus" value="<%= item.itemID %>">+</button>
                            </div-->
                            <button class="btn-remove" value="<%= item.itemID %>">Remove</button>

                        </div>
                    </div>
                </div>
                <% }); %>
              
            </div>
            
            <div class="cart-sidebar">
                <div class="order-summary">
                    <h2>Order Summary</h2>
                    <div class="summary-row">
                        <span>Subtotal ((<%= cart.reduce((total, item) => total + item.quantity, 0) %>) items)</span>
                        <span></span>
                    </div>
                    <div class="summary-row">
                        <span>Shipping</span>
                        <span></span>
                    </div>
                    <div class="summary-row">
                        <span>Estimated Tax</span>
                        <span></span>
                    </div>
                    <div class="summary-row total">
                        <span>Total</span>
                        <span></span>
                    </div>
                    
                    <a href="/checkout" class="btn-primary btn-checkout">Proceed to Checkout</a>
                    
                    <div class="promo-code">
                        <h3>Promo Code</h3>
                        <div class="promo-form">
                            <input type="text" placeholder="Enter promo code">
                            <button class="btn-apply">Apply</button>
                        </div>
                    </div>
                </div>
                
                <div class="continue-shopping">
                    <a href="/">Continue Shopping</a>
                </div>
            </div>
        </div>
        
        <!--div class="saved-items">
            <h2>Saved for Later</h2>
            <div class="saved-items-grid">

                <p class="empty-state">You don't have any saved items.</p>
            </div>
        </div>
        
        <div class="recommended-products">
            <h2>You Might Also Like</h2>
            <div class="products-row">

            </div>
        </div-->
    </main>
    
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            attachCartEventListeners();
        });
        async function updateCartContent() {
            try {
                // Fetch the updated cart HTML
                const response = await fetch('/cart', {
                    method: 'GET',
                    headers: { 'Content-Type': 'text/html' },
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.text();

                // Update the cart content dynamically

                const tempDiv = document.createElement('div');
                tempDiv.innerHTML = data;
                const newCartContent = tempDiv.querySelector('.cart-items');
                const pageHeader = tempDiv.querySelector('.page-header');

                if (pageHeader) {
                    const currentPageHeader = document.querySelector('.page-header');
                    if (currentPageHeader) {
                        currentPageHeader.innerHTML = pageHeader.innerHTML;
                    } else {
                        console.error('Current page header not found in the DOM');
                    }
                } else {
                    console.error('Failed to find updated page header in response');
                }
                if (newCartContent) {
                    const currentCartContent = document.querySelector('.cart-items');
                    if (currentCartContent) {
                        currentCartContent.innerHTML = newCartContent.innerHTML;
                        // Reattach event listeners
                       attachCartEventListeners();
                    } else {
                        console.error('Current cart content not found in the DOM');
                    }
                } else {
                    console.error('Failed to find updated cart content in response');
                }
            } catch (error) {
                console.error('Error fetching updated cart content:', error);
            }
        }
        function attachCartEventListeners() {
            // Handle increment button
            document.querySelectorAll('.qty-btn-plus').forEach((btn) => {
                btn.addEventListener('click', async function () {
                    const itemID = btn.value;

                    try {
                        // Send POST request to increment item
                        const response = await fetch('/cart', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ itemID: parseInt(itemID), incrementItem: true }),
                        });

                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }

                        // Fetch updated cart content
                        await updateCartContent();
                    } catch (error) {
                        console.error('Error incrementing item:', error);
                    }
                });
            });

            // Handle decrement button
            document.querySelectorAll('.qty-btn-minus').forEach((btn) => {
                btn.addEventListener('click', async function () {
                    const itemID = btn.value;

                    try {
                        // Send POST request to decrement item
                        const response = await fetch('/cart', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ itemID: parseInt(itemID), decrementItem: true }),
                        });

                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }

                        // Fetch updated cart content
                        await updateCartContent();
                    } catch (error) {
                        console.error('Error decrementing item:', error);
                    }
                });
            });

            // Handle remove button
            document.querySelectorAll('.btn-remove').forEach((btn) => {
                btn.addEventListener('click', async function () {
                    const itemID = btn.value;

                    try {
                        // Send POST request to remove item
                        const response = await fetch('/cart', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ itemID: parseInt(itemID), removeItem: true }),
                        });

                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }

                        // Fetch updated cart content
                        await updateCartContent();
                    } catch (error) {
                        console.error('Error removing item:', error);
                    }
                });
    });
};


    </script>
    

</body>
</html>